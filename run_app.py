#!/usr/bin/env python3
"""
VoiceSub-Translator App Runner
Script Python ƒë∆°n gi·∫£n ƒë·ªÉ ch·∫°y ·ª©ng d·ª•ng
"""

import os
import sys
import subprocess
import importlib.util

def check_venv():
    """Ki·ªÉm tra m√¥i tr∆∞·ªùng ·∫£o"""
    if not hasattr(sys, 'real_prefix') and not (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        print("‚ùå Vui l√≤ng k√≠ch ho·∫°t m√¥i tr∆∞·ªùng ·∫£o tr∆∞·ªõc!")
        print("   source venv/bin/activate")
        return False
    return True

def check_dependencies():
    """Ki·ªÉm tra th∆∞ vi·ªán ph·ª• thu·ªôc"""
    required_modules = ['torch', 'whisper', 'customtkinter']
    missing_modules = []
    
    for module in required_modules:
        if importlib.util.find_spec(module) is None:
            missing_modules.append(module)
    
    if missing_modules:
        print(f"‚ùå Thi·∫øu th∆∞ vi·ªán: {', '.join(missing_modules)}")
        print("   Vui l√≤ng ch·∫°y: ./smart_install.sh")
        return False
    
    print("‚úÖ T·∫•t c·∫£ th∆∞ vi·ªán ƒë√£ s·∫µn s√†ng")
    return True

def find_gui_app():
    """T√¨m ·ª©ng d·ª•ng GUI c√≥ s·∫µn"""
    gui_options = [
        ("run_modern_gui.py", "Giao di·ªán hi·ªán ƒë·∫°i"),
        ("src/gui/modern_app.py", "Giao di·ªán hi·ªán ƒë·∫°i"),
        ("src/gui/app.py", "Giao di·ªán c·ªï ƒëi·ªÉn"),
        ("simple_test.py", "Test ƒë∆°n gi·∫£n")
    ]
    
    for file_path, description in gui_options:
        if os.path.exists(file_path):
            return file_path, description
    
    return None, None

def run_app():
    """Ch·∫°y ·ª©ng d·ª•ng"""
    print("üöÄ VoiceSub-Translator App Runner")
    print("==================================")
    
    # Ki·ªÉm tra m√¥i tr∆∞·ªùng
    if not check_venv():
        return
    
    if not check_dependencies():
        return
    
    # T√¨m ·ª©ng d·ª•ng GUI
    app_path, app_desc = find_gui_app()
    if not app_path:
        print("‚ùå Kh√¥ng t√¨m th·∫•y ·ª©ng d·ª•ng GUI n√†o!")
        return
    
    print(f"üîç T√¨m th·∫•y: {app_desc} ({app_path})")
    
    # Ch·∫°y ·ª©ng d·ª•ng
    try:
        print(f"üöÄ Kh·ªüi ch·∫°y {app_desc}...")
        subprocess.run([sys.executable, app_path], check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå L·ªói khi ch·∫°y ·ª©ng d·ª•ng: {e}")
    except KeyboardInterrupt:
        print("\nüëã ƒê√£ d·ª´ng ·ª©ng d·ª•ng")

if __name__ == "__main__":
    run_app()